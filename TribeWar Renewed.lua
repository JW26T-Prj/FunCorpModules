-- Atualizações feitas em 16/02/2024:
-- Adição de modo P1
-- Adição de comando !rt para rodar o mapa atual novamente
-- Algumas correções de bugs
-- Remoção dos comandos !tc e !ms, já que não são mais necessários
-- Aumento do número máximo de rounds para 50
-- Correções em alguns textos

-- Créditos originais para Lynezx#0000, Nasus_assassin#1534 e Dhanny_mheyran#6701.
-- Original credits to Lynezx#0000, Nasus_assassin#1534 and Dhanny_mheyran#6701.

admin="" -- Insira seu nome aqui, FunCorp! / Insert your nickname here, FunCorp!

-- Comandos/Commands:
-- !start = Inicia uma nova partida. Você precisa estar na tela inicial para fazer isso.
-- !reset = Descarta a partida atual e retorna para a tela inicial.
-- !skip = Pula para o próximo mapa.
-- !rt = Executa o mapa atual novamente.
-- !rounds [5-50] = Define o número de rodadas de cada partida. (padrão: 15)
-- !mapmode [0-4] = Escolhe o tipo de mapa que será executado.
-- No comando acima, insira 0 para RACING, 1 para BOOTCAMP, 2 para VANILLA, 3 para MIX e 4 para P1. (padrão: racing)
-- !maptime [30-120] = Define o tempo, em segundos, no qual cada mapa será executado. (padrão: 60)
-- !kill [name#tag] = Mata o jogador selecionado.
-- !ban [name#tag] = Bane o jogador selecionado do module.

-- !start = Start a new game. You need to stay into the lobby screen to do this.
-- !reset = Discard the current match and go back to the lobby screen.
-- !skip = Skip to the next map.
-- !rt = Run the current map again.
-- !rounds [5-50] = Set the number of rounds for each match. (default: 15)
-- !mapmode [0-4] = Set the map category.
-- With the above command, insert 0 for RACING, 1 for BOOTCAMP, 2 for VANILLA, 3 for MIX and 4 for P1. (default: racing)
-- !maptime [30-120] = Define the number of seconds that each map will run. (default: 60)
-- !kill [name#tag] = Kill the specified player.
-- !ban [name#tag] = Ban the specified player. This only has effect into the module.

-- NÃO EDITE NADA A PARTIR DESTA LINHA!! // DON'T EDIT ANYTHING BELOW THIS LINE!!
for _,f in next,{"AutoShaman","AutoScore","AutoNewGame","PhysicalConsumables","AfkDeath","MortCommand","DebugCommand"} do
	tfm.exec["disable"..f]()
end
for _,g in next,{"start","reset","rounds","mapmode","maptime","kill","ban","rt","help","skip"} do
	system.disableChatCommandDisplay(g)
end
lang={}; data={}; rounds=15; mode="lobby"; maps="racing"; map_time=60; lobby_map="@7404327"; winner_map="@7928188"; round=-1; alives=0; position=1; remain_int=0;
tribes={}; final_ranking={};
mapas={1,2,8,11,12,14,19,22,26,27,28,30,31,33,35,40,41,44,45,49,53,55,57,58,59,62,63,64,65,67,69,70,71,73,74,78,79,80,81,86,89,92,96,100}
mapas_p1={3046622,994090,987795,979402,979042,978916,996338,977015,957484,956669,955084,952979,952958,946290,933324,928596,1308625,4593667,1604646,3849909,5861307,3789713,7755092,3702544,1122158,2169032,1114578,1347551,5099663,6761379,2053480,5886401,1716017,3051833,6099304,3002720,1983899,1415214,2458906,475402,963658,5682829,336255,6110457,2194112,2348837,5854095,600830,1593380,2465291,3043609,2099718,2151826,3792605,2136212,4224284,3606930,2698382,3811514,1808948,2989096,2833898,5461794,1810151,2426196,2734326,3729856,1922275,3555798,2955047,397311,5421762,5459409,5771925,6383899,3098930,1555120,1911955,804619,3662791,2714469,3684474,2222219,1592556,1975588,3733183,2897344,2816033,1530736,5102095,5103069,5096858,5103286,5103299,5103684,5104074,5104328,5104587,6416297,4290900,6763500,5588883,1531521,4933333,3712466,1421520,5085930,3475709,2465159,1795230,3807823,5734817,5482355,3744443,551001,551003,5042309,4459147,769791,1320200,1503940,3073162,3698286,5886620,1749254,1871912,1784108,1609088,6061170,1003963,3695931,6496933,2432342,3336309,2123561,2925655,818675,1229621,3720543,3006942,965404,3457522,2729030,2427285,2582106,6224102,2211932,3743184,5100370,2305839,496973,2135750,2887090,3572718,3713314,2030209,2382163,2988394,2988394,5802880,3820109,5492111,6348717,5208352,6798947,5397241,4006346,4974967,2228042,3752246,3084900,1679431,1889107,3890459,3912906,1599083,1783494,1765416,4154680,6332412,3243319,6378165,3859455,3859440,3859448,3576676,3020612,535703,3637586,2906379,1445784,3029793,2602882,3814326,3227019,3499994,1922136,3064499,3230842,2015865,1945426,1825683,5474771,949404,1555649,3897314,1576962,1740569,4253476,308290,1509488,5339492,5826042,6932832,5196705,523599,6968005,6817839,4986806,6727975,6406185,6497633,924611,335672,4551051,863058,5363604,5387456,1848021,295786,6354668,972736,3639993,1124089,1553365,2464770,958752,5246780,3684576,2978696,1398686,2840285,6415298,3664938,6097465,2499754,2971518,1448994,3775529,3769557,2580890,5654635,3515792,1354086,1607271,2864941,3758080,2928937,1479391,6117137,1432892,2530165,2501960,1725977,3643410,2796550,1476546,1077820,4984086,2358318,3875982,2232543,3029569,1703288,5667629,2179111,3848392,596206,2676504,2169032,1637869,1931371,2962689,4986791,1360399,5182823,1837351,1769303,3641438,346677,346677,346677,346677,928304,1654457,1987288,5532425,1280922,4706955,1354626,4591899,1273489,3699034,2092290,2250327,1611752,1665929,3686809,444948,1724476,3343865,1492000,4068702,4285551,1567583,3699501,5869140,2972854,3711328,1925618,2224069,3866569,3626395,2372055,2937392,2412906,3742961,2730450,4903690,3489293,2075791,2081737,3591676,3985587,2857172,6168975,6027895,1182462,1667979,2883221,920803,411975,1207484,1454226,2415010,3716679,6359335,3464602,6925000,1990566,2459054,4576716,2784397,2455667,5432981,2172624,4299202,763383,2154770,914035,1454226,1411495,3640933,2588439,2649598,3655567,463809,3422535,2951560,2981785,3675438,2462581,2667977,2763731,551113,1617254,3757248,3254479,1147674,5719188,3705060,1040912,370506,3684002,6620001,3880626,2072042,3647084,3828207,3537123,3618931,3592058,5194293,3211247,3669926,3731180,3175085,3988643,2703498,1603790,1604481,2240763,4961039,2686675,1952016,1322970,3837507,3651818,237116,410761,3069439,3774885,5840365,3731427,5725959,1693284,6380261,377836,3514399,1819063,1553514,5512348,5227442,5717626,2876539,5748062,2074751,2050140,2550766,2206884,3206914,1805487,4097284,3022119,3632876,3520474,2643649,4146225,3984929,1667881,418647,1664955,558545,5031716,2633481,1384334,2984889,3590715,313671,5289725,4252578,4603458,2267529,1609914,3824465,4846540,3084119,4701213,2928081,4008546,4807572,1878987,3545845,4428798,6024473,1013418,3779727,6483218,4739767,2572437,4611726,3639522,2952445,1815959,6217685,6817815,1631144,2716790,2479159,2892732,3329644,6766161,7544571,3569727,5436814,5152657,2865540,3747030,763507,502367,1569338,6847397,1664206,523063,1713599,1053435,4200758,1700392,615060,297935,4425570,4354774,6052422,1621816,896160,3514470,1460803,5387368,3103524,4870394,3593977,5896865,2747553,447416,1937367,1649390,3255515,3030719,1978537,974974,1160104,2519609,5438063,1698518,1948214,5509365,5638527,2479857,2085706,4705554,2118873,5086697,5269551,1677684,5788578,3896968,3387926,1980068,2835893,5813786,1931832,3595417,1647718,2629657,3841128,3799998,253185,1485715,3586929,1891070,6469397,2593776,4322359,2223087,3678963,5404111,928932,1374761,1264371,3679928,2046467,6225379,5171444,5167694,5157983,5423355,2568734,5265717,1132547,734801,1165108,6096329,3728829,5043345,3658285,3589964,3573613,3557368,2163742,3387826,1076550,5069883,1621292,3966524,1451655,2088004,4889205,916783,2282320,5206625,1724476,1746469,3979164,3864964,5882565,3976691,1414884,2976790,5612226,7598816,2905077,5521190,1567583,3029253,3014556,4350189,3727215,6852010,2971901,2857239,556968,1985203,2543526,776388,2586833,376396,1916839,1464805,2634571,2960638,6901124,1399931,2609575,4848465,3901079,6205585,1585804,3919924,4067778,2340745,3533379,2969546,5576533,2510021,1890436,1980004,5845176,5853829,2571202,3543036,2877339,1846397,5629504,3704320,2223149,3185643,6618462,1529469,2530165,1891368,5941925,3118877,1549214,1730735,802902,2663439,1663236,3430946,1382959,2326215,5571331,2002651,1553455,2479609,1352254,1742587,3659613,2431609,1536702,6203635,650830,2798632,5460163,4883143,2149868,5510498,3808106,2893867,2032283,2631904,1841509,2414847,3357194,6036604,2174969,2703901,3694470,3839094,5537746,728208,4160966,1931520,3835106,2805936,3018949,3298590,4273592,3673153,1886819,3120127,6547114,5745602,6629374,6480535,5784632,3305227,2749185,3100074,3764961,421611,3166741,5718531,1641988,3072114,3718648,3696531,4995458,1489352,5332812,3990225,2624923,2031223,1868778,3913081,1149838,2330762,3742469,846554,6304005,5582180,2156077,6507889,304475,3745615,3561381,3132933,3697800,3149627,5302706,4106370,2793053,1860112,2340145,1289525,1661675,1324386,1179152,1740676,2109767,708823,5343022,420771,2667812,2733535,3699329,1770511,2656391,1819753,3853276,2480456,1460852,1363261,1425622,385105,3800097,5061445,1994320,4309546,3239127,1286937,2847679,2319181,1881982,5329128,1707180,1055018,1866817,1700898,4148579,2310887,1697320,2874444,2449214,687298,3285999,3696921,5119425,2476398,3604500,5540020,4513718,3921722,5160514,6300073,3197249,1405239,2620598,1428463,1480565,992578,1424798,1780210,2440885,2698054,2420501,7594767,4545101,2048050,5001366,3277158,2163742,1510818,1313887,5092201,2550414,5771583,5745150,3768800,1203713,2031462,605936,5043256,3684726,4241064,3652112,3797080,1502512,2398459,1686942,1772458,2415314,2581348,2081656,5941814,591201,2025979,1890436,1733434,2575661,3484494,1587693,3654164,5760249,3773397,3617288,2853632,1851969,2960319,2624923,2742266,293407,6133550,4698671,2740472,3676395,3679140,5472351,6777359,1803169,3690316,5538831,116040,5239176,901784,4441552,3024291,3559791,866665,1867649,1844404,2319756,1921105,235863,481141,3710878,3745348,1551411,599339,1132841,3186738,1445806,2950316,1999433,3517551,4564380,1709079,1463576,2473784,1990585,4225415,3534755,1529753,6568183,3964168,4465679,5830619,1636847,3084024,2978758,2207242,2828225,1430257,1611752,5083570,1503669,3658619,3712466,912490,3637190,3690789,1469911,5086164,3702120,721910,2093306,3668632,3891989,3865829,1807161,2681705,2013606,1220037,3089485,2163742,1053539,1721251,5478906,6205970,3156745,4348352,3241835,3326440,1569481,3636571,2986279,1643776,3837289,5431781,6752042,2418253,2416543,3358124,411687,1712441,193187,2877165,1608238,1819776,3480598,2626804,3581991,3898426,2481042,3181008,4182202,5611222,2100416,2816064,2543452,3932685,5105940,389768,5395761,3697752,1967351,6830525,3896856,2705995,3489333,5484871,2501538,5313078,1118306,4818087,3428934,3757278,5523199,1944889,1519256,2894515,3150084,1468561,5499302,4900101,3570936,193187,6733104,521756,2785571,7243656,2504433,268985,4697282,2857448,2457864,1387242,2983538,1746823,6872493,3851834,3143538,468972,5814223,3841284,3630979,3216342,2774931,1040236,677608,895971,3564891,3676523,2159625,3697872,6121939,3806103,3946237,5539855,2185227,2445318,2973285,6203577,1606904,3190335,6103100,1590935,520308,2154166,6202855.1761416,2767238,3539557,531393,1537810,3705380,5000056,2962094,3549002,1699725,1451996,1610004,1338610,296361,1548446,3023500,6304005,4380537,3520951,1652941,3755613,4009415,401705,2237427,6201167,2784397,5255657,533946,3015348,4234518,3387926,1808440,852036,4271527,3661778,1580042,2880295,1616692,2413286,3988481,2583328,3221567,1453388,2972456,5017009,3663231,3491935,3478705,1891199,6140452,6498002,1706451,3777243,1691451,3685069,1964070,5070340,1972853,2178289,1418353,3849085,4298073,2211530,1845355,6109280,2035594,1999538,733188,1407496,885790,3717973,3906543,5948551,5976869,2452276,6070666,1487531,3026533,1975642,6714712,3217173,542206,2913914,5656820,1769722,1780844,2668543,5707667,1840109,3035430,3641597,5723425,716454,1748936,2698747,2024218,3204335,2833702,505805,2048050,3696199,3089894,1828315,3069262,3750609,2731707,3729330,1794589,2017255,4640565,4055165,6840620,6965421,3164541,6965421,3685464,2054943,365315,5813469,1033390,1124859,3641873,3661173,1473836,2431444,3503305,5737012,2423265,1705725,1949215,1589402,2476398,5710452,5919033,2879902,3497217,6571252,3433197,6104868,6726790,1380450,2558489,3721136,1650589,3647084,3624946,6557245,3912825,5166234,3029129,1477421,1799351,1737233,2038475,1446502,2012857,1958837,5432386,6042206,243962,5070428,2198167,2749103,1369255,2557752,2371914,5188867,3731931,3238202,1439286,5176687,1446952,1142162,3328963,721229,6050971,3531249,3756184,1532940,6660659,3184847,1971197,3832344,5293621,2239095,3379444,5402499,857969,4702472,5213306,5746152,4864351,3060011,5200910,3257930,2398407,1544861,3144670,1644081,2006666,1580374,5796038,2815472,5681686,3100650,2692126,1741073,2102814,3710363,1402257,2665959,3615479,2808418,5756977,370831,2129581,3684931,2716169,1609642,3702443,4359062,6516286,5524577,2274853,3831715,3478750,554595,3681488,3429348,808903,1815144,1997567,2984611,4966199,2479767,3350174,2977670,5758757,1776462,6032284,1494544,4211491,1819646,2787653,2915889,4723257,1284922,3402209,5544351,5096786,1421488,1319953,2151630,3090268,3728775,2696883,6975901,1682563,1055301,4089620,5493813,3388889,3873919,3621510,2040327,1703062,1770702,2049829,1031162,1940633,1477077,3485112,3650626,2240014,3000880,4833628,1568124,2599257,2457551,3963989,1923304,319426,2064891,5952334,5854437,2962820,3909564,3110731,3746970,3671792,630767,3960389,4625712,1473876,6647453,3236460,1391129,3894282,1664227,2816435,5838710,3285994,5017387,2306483,5568574,2537299,1183614,6255741,4143293,1357913,768679,312415,345232,541888,883644,541088,415457,527634,5327280,3361351,1792257,2797861,2954979,3881931,3733964,2320378,2882873,2695460,5597023,2098179,2201219,5736061,1582926,1677763,3828678,1878759,393067,3067756,3963989,6717825,6731562,6820863,5865143,5746807,278585,1821529,6800839,141355,1220087,2922338,411415,5604555,6453895,2011033,1056854,3041398,311316,2211509,2982818,1566653,2266481,3357603,2802076,454094,1143472,5661746,3042024,4130245,1380341,3413565,3755295,3006464,2866340,2428982,3452457,2736710,439982,2713132,6526973,2425058,5489217,5231904,3164976,3783573,2141733,5281388,2624327,2455731,4306045,3318104,4427048,5896853,1642281,3095578,3821686,2247536,524651,3635836,2429975,2982051,1854121,313539,2055462,1357903,3915506,1213682,3569080,1676593,2187555,1998209,2200136,1739798,756388,2543093,5265432,2905532,2479621,1973197,1349271,5559971,5520818,2613717,3676771,1278553,3604629,1652907,5804164,1994754,1672102,3579181,3747997,136372,2918560,2363401,2203543,854252,2459502,3587695,2053429,697099,734286,566586,3707753,1626985,5784387,1265041,6798468,3772198,4244560,2673219,1695546,2994363,2730612,3100754,886099,3110056,3701884,3350141,3458781,112125,3099936,2317494,2286884,1620205,1941646,2451539,5462759,1752343,1291046,1767282,1634135,4940660,395638,1982490,1476917,1520050,5046251,3486777,339688,1817461,2242986,1465794,2925302,1705533,2922706,4836774,3660363,745660,3169468,1520763,3509457,3569617,355391,6648567,862026,2023835,2502370,1294506,3343007,2226606,3683984,1700134,3292563,2060440,3777791,3219347,6020360,6886256,1585825,4483044,2054433,3823226,2111371,1416017,1569410,2901923,5597196,3368095,1959434,5120511,3800025,1874309,3903481,6025066,840023,2682348,3699720,2896854,3688479,1502057,1555263,809981,585601,1375127,1596918,360669,2840545,5635682,1846140,2615488,2849336,3201680,1231531,3608639,3146467,5324271,1976484,9789163120589,3680975,5517500,3089475,3192865,447198,5133665,3565552,1662547,2770880,1311245,6149285,6569917,6569917,1002415,562828,3245190,5484232,2459645,3568909,1203580,4082130,2222106,609377,6827736,1605542,5782928,1733405,2003397,3176790,2704798,1702414,3193031,3495072,5246769,1886726,3806514,444669,4346701,3637879,1651912,2810301,2483585,6013518,2967201,1712139,1434614,2037858,1486073,796522,1704970,6006077,2904194,2299901,3428969,3695243,1646580,4856787,3693603,1695961,573162,1602006,5225660,3904844,4130519,2847085,432838,3367472,1661557,5578142,3848961,556991,5470076,1934684,3827073,2216672,5925390,2422320,6011897,1684971,5874848,2904364,1826106,1299778,3889066,1651396,2474610,2954389,2912090,1557183,1937029,2507487,1715294,2922372,5463645,1681132,4780988,913716,3545388,2932771,5413653,1845425,2493682,2990927,2887564,2677697,408672,5316507,3703101,2493682,2990927,3632558,2887564,2677697,5316507,3703101,1308009,4770812,5337079,3755004,1415101,5745185,982968,3660773,1308009,4770812,5337079,3121001,247806,2271606,3931104,3725831,3205507,5505571,2668317,2885795,3732788,6507006,1709842,3412978,4119570,3678477,1576605,7175099,1305918,2924041,530050,1671341,6538336,2590428,3111412,3444188,2745018,4100202,2604892,3778127,2930905,5229169,7201798,1935783,1766070,1934713,3600756,2213804,2767444,2422252,2581588,2008408,3225517,1583004,806374,4743209,2206428,1337908,3639063,5819000,3696099,2222914,2000227,7422917,1883283,1686313,5521222,3089084,2442179,1759304,1747395,6538525,2553999,6982855,3685130,6751808,6099941,4934225,1516378,5805504,675584,470956,2510902,1242503,3749719,2487185,4129854,3526684,5851713,1567499,485685,5331758,3063021,312874,5086885,1334799,2673350,2094529,816937,1984183,3660915,5067745,1836636,2570299,4974043,2958926,1617612,16642067,2324943,1207415,7546911,2818215,4244697,3974286,7165647,3671337,2801423,2510424,1388511,624595,1297286,2436358,6091196,5512914,487571,534127,2815852,6458416,3804033,4933567,5744422,5722902,5470939,5452179,5457991,1640994,2873717,1524883,1845772,3674891,1875155,2464178,1739033,3724024,1791754,4159572,967165,2701754,5567026,2472185,5552462,249043,3889066,1651396,2474610,2954389,2912090,1557183,1937029,2507487,1715294,2922372,5463645,1681132,4780988,913716,3545388,2932771,5413653,3084699,2785576,379257,1860558,4848841,3177975,2873752,2529630,2521006,400020,7543202,7534845,3699951,5905174,1989575,2497300,451053,2184388,1392529,434181,4851652,3721264,2702019,336108,1338400,7463026,1821872,3678098,1974435,6474880,3134012,2177055,1458500,3305645,856005,1595486,5458093,1612392,2460705,6267145,1580571,1538872,5824666,3872292,2604202,1970794,1794494,6914627,3913043,522169,1557181,2889144,1682581,3570595,2952667,3531094,972593,2828325,3718893,625620,1826923,3777243,3162194,2071143,3175833,2822802,6450734,3075720,1552345,400875,3695422,3617908,4999095,868500,3273027,1830647,3001168,839357,143026,6509298,6216983,2866493,1699319,3913043,6043877,2777244,3790887,1597535,5366786,1943658,5967356,4644327,2573869,4886905,5497221,6166360,3757587,1601279,409682,3656856,1880412,5548982,440803,3486898,1469614,1691653,3517982,1971388,1591567,2016029,1915474,1257990,2836295,3495373,1595131,2712714,2038888,2667948,2112482,5898371,2152725,1794645,1766575,3413233,1394393,2752920,5826810,1800219,3236194,5880743,3888975,3239977,1672342,1289969,2634502,5898371,1994578,3974343,3862812,1959522,2695007,1975949,5539548,3817687,1969538,526457,3648898,2497733,3919737,3230126,3112996,1649655,1414281,1419212,1209447,4702472,524427,1578727,4670311,6569858,1900395,5593658,748627,3220216,3036369,1533891,6104868,5208730,3220691,2113571,5692470,1545496,212279,6832768,3411897,5039866,4198229,3220150,5040626,6945400,1580625,3783670,5086760,2954390,4649501,5605098,4316966,3814007,1893227,1570197,3950540,1662866,3720504,124749,1739328,1839751,3267052,3780004,5534969,5493628,2189066,4933333,5000031,2414326,1660312,877064,3650461,1740582,7532482,3694198,2852186,1170709,2872105,1682394,1202364,2153009,4366270,1824797,927167,919407,6814675,7108753,5556574,2818776,2749154,215024,5307145,4186227,5721017,1295391,2514839,5895587,903753,5642148,3886007,455254,7577656,3708532,7577659,7577660,7577661,7577662,7577663,2951831,1632286,3133284,2888737,2959380,7316490,2923902,1879135,3817089,3743709,5784317,2196639,3491472,2932823,3556939,4721537,5557000,3707957,4449825,4335108,1650317,2627810,4940330,1197771,2515859,924199,5342184,3178756,6461474,3961089,2434803,4028439,3820443,2753029,3902921,1636847,5146101,1352371,6149586,2280915,1566790,2461560,1811706,1663869,6593705,1356823,6712790,1961069,3510802,3674914,2185637,1714183,5772036,4814426,2011425,5719032,3703405,5208010,120696,1677751,1390504,5058856,3153335,1997462,3603807,41413,2439981,2152273,2837758,2846092,5850864,1155577,3507172,287241,3741419,692902,5316041,5301410,3682607,1753932,3091367,788325,1449159,3366992,916292,6347261,1434657,6102366,1255406,1076556,2798150,1729711,5683203,6837500,1962691,5198233,599132,567368,3950087,4074777,6419244,2916236,4800287,3757673,293239,6536106,809165,3415097,854987,1990729,1476644,3197548,3732761,2670433,2863240,3744754,3042024,1414583,1405201,3900432,5568878,1344308,1827745,3192935,1904605,480826,1254895,3641472,4882220,1634079,3172505,2256215,562530,1394768,786326,6158708,3352107,5391121,5067010,2468375,3201256,3724600,6286341,3549181,7186722,339068,1979304,5435620,6028061,2708731,5178280,1201818,5699567,3397714,2247468,2719292,2179111,2232637,2368305,1411884,1623902,3824123,5641251,3737863,1900927,3026180,6873059,3324192,4289072,3233197,2023564,3691680,2277265,1757932,2676236,6428562,5881430,7576691,7576693,7576695,2794461,7576709,1395712,5530715,7576703,5444350,2207345,2842087,3572040,2162120,2440783,5130206,2370767,4558726,4060762,3628872,3532285,4675569,2835676,1528880,1383825,7272444,1961891,3079549,2501462,1986742,7545766,5400102,7070700,7100013,3521381,5504146,1976484,2609729,957128,997153,5727892,2380804,1310682,2807482,3101639,3044133,608631,2563142,1156897,3490631,3662992,5452668,4217430,2251303,3057877,1646186,5327503,2493682,6191961,1785252,6340741,2488702,3720570,2810346,4877063,3854293,575662,1907014,3047479,1986742,1716079,2606512,2606512,1612436,1982506,220935,1447073,4069988,5950280,5613707,2720250,1764190,7362662,4327453,1854383,1667570,2956296,1578036,354759,2870581,1462709,3718084,4797932,3337441,5410633,2621030,1837491,2825611,3207688,6101891,1618019,1977256,3936998,264703,3180155,1583081,3577533,1889832,1674133,2395730,1816288,865228,1863285,562845,4140811,3522511,4675782,2049637,885029,4888891,3555164,1112380,1707338,3141100,2815451,1346358,1485567,1929667,3411709,545781,3931308,2376400,2074773,4350786,5696509,1212123,3675423,870306,369681,3911642,732670,65153223208273,1947104,2861616,7146696,5727966,5544344,2200571,1654575,2870129,2438149,1783803,4726846,566405,5521249,2964283,1718606,2931383,6068515,356909,3387580,3662963,1390843,3380309,2273250,1463033,5696927,3604144,1995181,2223354,621792,4298881,2389991,3018399,1738402,4216313,1588182,1509640,3475709,2732012,3786946,5444310,2740735,3678170,1760310,2760069,2136431,4414133,2661522,2298033,3693685,2041416,2993613,4901435,2629615,6954201,1481171,2857562,478496,3487949,3046275,1961336,1919727,5000014,2129630,7205609,1728908,446226,1462790,1840202,2094275,2889323,2534715,3685884,2578386,1396216,2598706,2455062,1924872,2824021,3600181,3709369,346069,1824086,1697385,3066506,5749982,4729716,1283844,561385,3012923,3382379,2926504,1587344,7710976,7710974,3616380,2639492,6144588,3120269,1862787,3751081,5142219,5530715,7713707,7713709,7565156,7713713,7713719,4999998,745226,7713723,7713733,7713738,7713739,3318990,2999552,3590209,1551462,7713782,7713784,7713787,7713801,3610719,378386,6065782,3326923,3702572,7713808,5618430,7713810,7713814,2813619,7710960,7259735,7713830,772028,3832217,4002811,1885199,2961748,7714393,7714399,7714405,7714410,1880049,271601,7714427,507651,3586875,3167703,1500680,2864069,5869453,4243141,4017126,1622123,2890988,3547231,1526625,5822342}
lang.br = {
	welcome = "<N><b>Bem-vindos ao module TribeWar Renewed!</b><br>Junte a sua tribo, conquiste pódios e represente-a com sucesso!<br><ROSE>Digite !help para ver a ajuda.<br><br><J><b>Script gerenciado por Gus_grav#7473</b><br><BL>Originalmente feito por Lynezx#0000, Nasus_assassin#1534 e Dhanny_mheyran#6701",
	tribelock1 = "<VP>Você está participando do jogo pela tribo </b>",
	tribelock2 = ".</b><br><N>Caso você troque de tribo, você poderá representá-la apenas no próximo jogo.",
	notribe = "<R>Você ainda pode participar deste jogo, caso seja convidado para alguma tribo. No entanto, você só pode representar uma tribo por jogo.",
	prepare = "<J><b>Prepare-se! O jogo vai começar em 15 segundos!</b>",
	map = "Mapa", time = "Tempo", points = " pontos.",
	scoring1 = " acrescentou 6 pontos para a tribo ",
	scoring2 = " acrescentou 4 pontos para a tribo ",
	scoring3 = " acrescentou 2 pontos para a tribo ",
	scoring4 = ", que agora está com ",
	tempr = "<ROSE>Estas são as tribos com maior pontuação até o o momento!<br>",
	madeby = "feita por Gus_grav#7473",
	cong1 = "<N>Parabéns para a tribo <VP><b>",
	cong2 = "!</b><br><N>Ela fez <J><b>",
	cong3 = "</b> <N>pontos e se sagrou vencedora do jogo!",
	isbanned = "<R>Você foi banido deste module por um administrador da sala.",
	isunbanned = "Você foi desbanido deste module por um administrador da sala.",
	istatus = "teve seu status de banimento alterado.",
	prepares = "<J>Este é um round apenas para preparação. A partida começa para valer apenas no próximo round.",
	nowplay = "<VP>Agora é pra valer! Jogo iniciado!",
	help = "<p align='center'><N><b>Bem-vindo ao module TribeWar Renewed.</b><br><br><p align='left'>Neste module, os jogadores representam suas tribos em uma competição. Conseguir pódios garantirá pontos para a sua tribo.<br><br>Ao final de um determinado número de rounds, a tribo que conseguir pontuar mais vencerá o jogo.<br><br><VP>Pontuações do jogo:<br><BL>• <N>1º lugar = <VP>6 pontos<br><BL>• <N>2º lugar = <VP>4 pontos<br><BL>• <N>3º lugar = <VP>2 pontos<br><br><R>Caso você saia de uma tribo e vá para outra, você poderá representá-la somente no próximo jogo."
}
lang.en = {
	welcome = "<N><b>Welcome to TribeWar Renewed module!</b><br>Gather the players of your tribe, win matches and represent her with success!<br><ROSE>Type !help to see the game help.<br><br><J><b>Script developed by Gus_grav#7473</b><br><BL>Originally made by Lynezx#0000, Nasus_assassin#1534 and Dhanny_mheyran#6701",
	tribelock1 = "<VP>You are representing the following tribe: <b>",
	tribelock2 = ".</b><br><N>If you join another tribe, you only can represent her in the next game.",
	notribe = "<R>You still can play this game, if you are invited to join any tribe. However, you can only represent one tribe at time.",
	prepare = "<J><b>Get ready! The game will start in 15 seconds!</b>",
	map = "Map", time = "Time", points = " points.",
	scoring1 = " scored 6 points to the tribe ",
	scoring2 = " scored 4 points to the tribe ",
	scoring3 = " scored 2 points to the tribe ",
	scoring4 = ". It now have ",
	tempr = "<ROSE><b>Current tribes scoreboard:</b><br>",
	madeby = "made by Gus_grav#7473",
	cong1 = "<N>Congratulations to the tribe <VP><b>",
	cong2 = "!</b><br><N>It scored <J><b>",
	cong3 = "</b> <N>points and is the winner of TribeWar!",
	isbanned = "<R>You are banned of this module by a room administrator.",
	isunbanned = "You are unbanned of this module by a room administrator.",
	istatus = " ban status was changed.",
	prepares = "<J>This is only a preparing round. The game full starts on the next round.",
	nowplay = "<VP>The game is now fully started!",
	help = "<p align='center'><N><b>Welcome to the TribeWar Renewed module.</b><br><br><p align='left'>In this game, the players needs to represent your tribes in a very tight match. Reach the podium will give points to your tribe.<br><br>At the end of the match, the tribe that scored more will win the game.<br><br><VP>Scores by position:<br><BL>• <N>1st place = <VP>6 points<br><BL>• <N>2nd place = <VP>4 points<br><BL>• <N>3rd place = <VP>2 points<br><br><R>If you leave your tribe and join another, you only can represent your new tribe in the next match."
}

if tfm.get.room.community == "br" or tfm.get.room.community == "pt" then
	text = lang.br
else
	text = lang.en
end

function findString(object,tb)
	for i=1,rawlen(tb) do
		if tb[i] == object then
			return true
		end
	end
end
function showMessage(message,name)
	temp_text=string.gsub(message,"<b>","")
	temp_text=string.gsub(temp_text,"</b>","")
	if tfm.get.room.isTribeHouse == false then
		tfm.exec.chatMessage(message,name)
	elseif tfm.get.room.isTribeHouse == true then
		if name == nil then
			print("<ROSE>[Test Mode] : <br><BL>"..temp_text.."")
		else
			print("<ROSE>[Test Mode] - "..name.." : <br><BL>"..temp_text.."")
		end
	end
end
function showMenu(name,color,x,y,width,height,title,content)
	if data[name].opened == false then
		data[name].opened=true
		ui.addTextArea(1004,"",name,-1000,-600,2800,1600,0x000001,0x000001,0.65,true)
		ui.addTextArea(1001,"",name,x+5,y+5,width,height,color,color,0.95,true)
		ui.addTextArea(1000,"<font size='13'><i><br><br>"..content.."",name,x,y,width,height,0x151515,color,0.95,true)
		ui.addTextArea(1002,"<font color='#f8d802'><font size='14'><p align='center'><i><b>"..title.."",name,x+5,y+5,width-11,22,0x101010,0x101010,0.95,true)
		ui.addTextArea(1003,"<font color='#ff2300'><font size='14'><b><a href='event:close'>X</a>",name,x+width-25,y+5,width-10,20,0,0,0.95,true)
	end
end
function findID(object)
	for i=1,rawlen(tribes) do
		if tribes[i][1] == data[object].tribe then
			return i
		end
	end
end
function rankTribes()
	table.sort(tribes, function(a, b) return a[2] > b[2] end)
end
function genRanking()
	final_ranking={}
	if rawlen(tribes) == 2 then
		showMessage(text.tempr)
		for k,v in ipairs(tribes) do
			table.insert(final_ranking,{v[1],v[2]})
			showMessage("#"..k..": <VP>"..v[1].." - <J><b>"..v[2].."</b>"..text.points)
		end
	elseif rawlen(tribes) >= 3 then
		i=0
		showMessage(text.tempr)
		for k,v in ipairs(tribes) do
			i=i+1
			if i <= 3 then
				table.insert(final_ranking,{v[1],v[2]})
				showMessage("#"..i..": <VP>"..v[1].." - <J><b>"..v[2].."</b>"..text.points)
			end
		end
	end
end
function banPlayer(name)
	if data[name] then
		if data[name].banned == false then
			tfm.exec.killPlayer(name)
			showMessage(text.isbanned,name)
			data[name].banned=true
		else
			showMessage(text.isunbanned,name)
			data[name].banned=false
		end
		return true
	else
		return false
	end
end
function genFinalRanking()
	final_ranking={}
	if rawlen(tribes) >= 2 then
		i=0
		for k,v in ipairs(tribes) do
			i=i+1
			if i <= 3 then
				table.insert(final_ranking,{v[1],v[2]})
			end
			if i == 1 then
				for name,_ in next,tfm.get.room.playerList do
					if data[name] and data[name].tribe == v[1] then
						tfm.exec.movePlayer(name,math.random(255,545),225,false,0,0,false)
						tfm.exec.playEmote(name,0)
					end
				end
				showMessage(text.cong1..v[1]..text.cong2..v[2]..text.cong3)
				ui.addTextArea(1,"<font size='23'><p align='center'><font color='#101010'>"..v[1].."",nil,260,300,280,70,0,0,1.0,true)
				ui.addTextArea(4,"<font size='14'><p align='center'><font face='Consolas'><font color='#101010'><b>"..v[2].."</b> pts",nil,370,370,60,25,0,0,1.0,true)
			elseif i == 2 then
				for name,_ in next,tfm.get.room.playerList do
					if data[name] and data[name].tribe == v[1] then
						tfm.exec.movePlayer(name,math.random(5,245),285,false,0,0,false)
					end
				end
				ui.addTextArea(2,"<font size='16'><p align='center'><font color='#101010'>"..v[1].."",nil,10,340,230,40,0,0,1.0,true)
				ui.addTextArea(5,"<font size='14'><p align='center'><font face='Consolas'><font color='#101010'><b>"..v[2].."</b> pts",nil,95,376,60,25,0,0,1.0,true)
			elseif i == 3 then
				for name,_ in next,tfm.get.room.playerList do
					if data[name] and data[name].tribe == v[1] then
						tfm.exec.movePlayer(name,math.random(555,795),305,false,0,0,false)
					end
				end
				ui.addTextArea(3,"<font size='16'><p align='center'><font color='#101010'>"..v[1].."",nil,560,355,230,35,0,0,1.0,true)
				ui.addTextArea(6,"<font size='14'><p align='center'><font face='Consolas'><font color='#101010'><b>"..v[2].."</b> pts",nil,645,386,60,25,0,0,1.0,true)
			end
		end
	end
end
function lobby()
	tfm.exec.newGame(lobby_map)
	mode="lobby"; round=-1; alives=0; position=1; tribes={}; final_ranking={};
	for i=1,6 do
		ui.removeTextArea(i)
	end
end
function eventNewPlayer(name)
	if not data[name] then
		newData={
			["tribe"]="";
			["wins"]=0;
			["rankings"]=0;
			["banned"]=false;
			["opened"]=false;
			};
		data[name] = newData;
	end
	showMessage(text.welcome,name)
	if mode == "lobby" or mode == "waiting" then
		tfm.exec.respawnPlayer(name)
	end
	if mode == "game" then
		if data[name] then
			if string.len(data[name].tribe) <= 1 then
				if not tfm.get.room.playerList[name].tribeId == nil then
					data[name].tribe=tfm.get.room.playerList[name].tribeName;
					showMessage(text.tribelock1..tfm.get.room.playerList[name].tribeName..text.tribelock2)
					table.insert(tribes,{tfm.get.room.playerList[name].tribeName, 0})
				end
			end
		end
	end
end
for name,player in next,tfm.get.room.playerList do
	eventNewPlayer(name)
end
function eventTextAreaCallback(id,name,callback)
	for _,i in next,{1000,1001,1002,1003,1004} do
		ui.removeTextArea(i,name)
	end
	data[name].opened=false
end
function eventNewGame()
	if mode == "game" then
		if round == 0 then
			showMessage(text.prepares)
		elseif round == 1 then
			showMessage(text.nowplay)
		end
		rankTribes()
		if round >= 2 then
			genRanking()
		end
		position=1
		for name,_ in next,tfm.get.room.playerList do
			alives=alives+1
			if data[name] then
				if string.len(data[name].tribe) <= 1 then
					if not tfm.get.room.playerList[name].tribeId == nil then
						data[name].tribe=tfm.get.room.playerList[name].tribeName;
						showMessage(text.tribelock1..tfm.get.room.playerList[name].tribeName..text.tribelock2)
					end
				end
			end
			if not data[name] then
				tfm.exec.killPlayer(name)
			elseif data[name] and data[name].banned == true then
				tfm.exec.killPlayer(name); showMessage(text.isbanned);
			elseif data[name] and tfm.get.room.playerList[name].tribeId == nil then
				tfm.exec.killPlayer(name)
			elseif data[name] and string.len(data[name].tribe) <= 1 then
				tfm.exec.killPlayer(name)
			elseif data[name] then
				if not tfm.get.room.playerList[name].tribeName == data[name].tribe then
					tfm.exec.killPlayer(name)
				end
			end
		end
	elseif mode == "end" then
		tfm.exec.setGameTime(60)
		rankTribes()
		genFinalRanking()
	else
		tfm.exec.setGameTime(36000)
	end
end
function eventPlayerWon(name)
	if mode == "game" and round >= 1 then
		if data[name] then
			alives=alives-1
			if data[name].tribe == tfm.get.room.playerList[name].tribeName then
				tribe_id=findID(name)
				if position == 1 then
					tribes[tribe_id][2]=tribes[tribe_id][2]+6
					showMessage("<VP>"..name.."<N>"..text.scoring1.."<VP><b>"..data[name].tribe.."</b><N>"..text.scoring4.."<J><b>"..tribes[tribe_id][2].."</b><N>"..text.points.."")
					if remain_int > 20 then
						tfm.exec.setGameTime(15)
					end
				elseif position == 2 then
					tribes[tribe_id][2]=tribes[tribe_id][2]+4
					showMessage("<VP>"..name.."<N>"..text.scoring2.."<VP><b>"..data[name].tribe.."</b><N>"..text.scoring4.."<J><b>"..tribes[tribe_id][2].."</b><N>"..text.points.."")
				elseif position == 3 then
					tribes[tribe_id][2]=tribes[tribe_id][2]+2
					showMessage("<VP>"..name.."<N>"..text.scoring3.."<VP><b>"..data[name].tribe.."</b><N>"..text.scoring4.."<J><b>"..tribes[tribe_id][2].."</b><N>"..text.points.."")
				end
				position=position+1
			end
			if alives <= 0 then
				tfm.exec.setGameTime(5)
			end
		end
	end
end
function eventPlayerDied(name)
	alives=alives-1
	local i=0
	local n
	for pname,player in next,tfm.get.room.playerList do
		if not player.isDead and not player.isShaman then
			i=i+1
			n=pname
		end
	end
	if i==0 then
		changeMap();
	end
end
function lockTribes()
	for name,_ in next,tfm.get.room.playerList do
		if data[name] then
			if tfm.get.room.playerList[name].tribeId == nil then
				showMessage(text.notribe,name)
			else
				data[name].tribe=tfm.get.room.playerList[name].tribeName;
				showMessage(text.tribelock1..tfm.get.room.playerList[name].tribeName..text.tribelock2,name)
			end
		else
			showMessage(text.notribe,name)
		end
		if not findString(tfm.get.room.playerList[name].tribeName,tribes) then
			table.insert(tribes,{tfm.get.room.playerList[name].tribeName, 0})
		end
	end
	showMessage(text.prepare)
end
function changeMap()
	round=round+1
	if round <= rounds then
		if maps == "racing" then
			tfm.exec.newGame("#17")
		elseif maps == "bootcamp" then
			tfm.exec.newGame("#3")
		elseif maps == "vanilla" then
			tfm.exec.newGame(mapas[math.random(#mapas)])
		elseif maps == "p1" then
			tfm.exec.newGame(mapas_p1[math.random(#mapas_p1)])
		elseif maps == "mix" then
			number=math.random(1,4)
			if number == 1 then tfm.exec.newGame("#17"); elseif number == 2 then tfm.exec.newGame("#13"); elseif number == 3 then tfm.exec.newGame(mapas[math.random(#mapas)]); elseif number == 4 then tfm.exec.newGame(mapas_p1[math.random(#mapas_p1)]); end
		end
		tfm.exec.setGameTime(map_time+4)
	else
		tfm.exec.newGame(winner_map)
		mode="end"
	end
end
function eventChatCommand(name,command)
	if name == admin then
		if command == "start" and mode == "lobby" then
			lockTribes(); mode="waiting";
			tfm.exec.setGameTime(15)
		end
		if command == "reset" then
			lobby()
		end
		if command == "skip" then
			changeMap();
		end
		if command == "rt" and mode == "game" then
			tfm.exec.newGame(tfm.get.room.currentMap); tfm.exec.setGameTime(map_time+4);
		end
		if (command:sub(0,4) == "kill") and mode == "game" then
			tfm.exec.killPlayer(command:sub(6))
		end
		if (command:sub(0,3) == "ban") then
			if banPlayer(command:sub(5)) == true then
				showMessage(command:sub(5)..text.istatus)
			end
		end
		if (command:sub(0,6) == "rounds") and mode == "lobby" then
			tt={}; for i=5,50 do table.insert(tt,tostring(i)) end
			if findString(command:sub(8),tt) then rounds=tonumber(command:sub(8)); end
		end
		if (command:sub(0,7) == "mapmode") and mode == "lobby" then
			if command:sub(9) == "0" then maps="racing"; elseif command:sub(9) == "1" then maps="bootcamp"; elseif command:sub(9) == "2" then maps="vanilla"; elseif command:sub(9) == "3" then maps="mix"; elseif command:sub(9) == "4" then maps="p1"; end
		end
		if (command:sub(0,7) == "maptime") and mode == "lobby" then
			tt={}; for i=30,120 do table.insert(tt,tostring(i)) end
			if findString(command:sub(9),tt) then map_time=tonumber(command:sub(9)); end
		end
	end
	if command == "help" then
		showMessage(text.help,name)
	end
end
function eventLoop(release,remain)
	remain_int=math.ceil(remain/1000)
	if mode == "lobby" or mode == "waiting" or mode == "end" then
		ui.setMapName("<J><b>TribeWar Renewed</b>   <G>|   <N>"..text.madeby.."<")
	end
	if remain <= 1000 and mode == "waiting" then
		mode="game"; changeMap();
	end
	if mode == "game" then
		remaining=math.floor(remain/1000)
		ui.setMapName("<J><b>TribeWar Renewed</b>   <G>|   <N>"..text.map.." : <V>"..tfm.get.room.currentMap.."   <G>|   <N>"..text.time.." : <V>"..remaining.."s   <G>|   <N>Round : <V>"..round.."/"..rounds.."<")
		if remain <= 500 and round < rounds then
			changeMap();
		elseif remain <= 500 and round >= rounds then
			tfm.exec.newGame(winner_map)
			mode="end"
		end
	end
	if mode == "end" then
		if remain <= 100 then
			lobby()
		else
			particles={0,1,2,4,9,11,13,21,22,23,24}
			for i=1,10 do
				tfm.exec.displayParticle(particles[math.random(#particles)],math.random(40,760),math.random(70,380),0.6,0.6,0.1,0.1,nil)
			end
		end
	end
end
lobby()
